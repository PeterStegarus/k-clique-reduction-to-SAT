1:
Generez toate combinarile nodurilor de N luate cate k. Pe masura ce obtin o
o noua combinare, o si verific daca este k-clica. Daca da, afisez True si
opresc programul. Daca nu, generez urmatoarea combinare. Tot asa pana am
epuizat toate combinarile, caz in care inseamna ca nu s-a gasit nicio k-clica
deci afisez False.

2:
La laboratorul 8, ni s-a prezentat reducerea SAT <=p k-Clique, pe care incerc
sa o inversez. Construiesc un grafic asemanator si in cazul k-Clique <=p SAT ca
in cazul de la laborator, in functie de care construiesc clauzele.

(
  Exemplul din laborator:
  SAT <=p k-Clique: (phi = c1 ^ c2 ^ ... ^ cn)
  k = n
  G:
    V = {xvi pt fiecare Lvi din fiecare ci}
    E = (xui, xvj) apartine E daca i != j, Lui != ~Lvj
)

k-Clique(k, G) <=p SAT(phi):

(Lvi = True daca nodul v este al i-lea nod din k-clica)
n = k

Pentru fiecare i, unul dintre noduri trebuie sa fie al i-lea nod din clica.
Deci am cate o clauza ci (i=1..k) cu literalii Lvi pentru fiecare nod v=1..N
(ci = L1i V L2i V ... V LNi). (1)

Totodata, acelasi nod nu poate aparea de mai multe ori in clica. Deci, pentru
oricare nod v, (~Lvi V ~Lvj) oricare i != j (2)

Daca intre 2 noduri nu este muchie, nu pot fi amandoua intr-o clica. Deci daca
u si v nu sunt adiacente, am clauza (~Lui V ~Lvj) pentru orice i != j (i, j fiind
perechi de "nivele" din clica 1<=i<j<=k) (3)

inputul pentru SAT va fi phi = ^ intre toate clauzele obtinute din (1), (2), (3)

(1) k clauze cu cate N literali: N * k
(2) (N * combinari de k luate cate 2) clauze cu 2 literali: N * k * (k - 1)
(3) combinari de N luate cate 2 perechi de muchii * combinari de k luate cate 2
    perechi (i, j) clauze cu 2 literali: N * (N - 1) * k * (k - 1)
Adunand (1), (2), (3) obtin N * k * (N * k - N + 1) adica O(N^2 * k^2) clauze.
Cum k < N, complexitatea transformarii este O(N^4), deci polinomiala.


Demonstratie k-Clique(k, G) = 1 <=> SAT(phi) = 1

1) k-Clique(k, G) = 1 => SAT(phi) = 1
k-Clique(k, G) = 1 <=> Exista k noduri distincte adiacente 2 cate 2 care sa formeze
o clica, [v1, v2,..., vk] (vi fiind din lista de noduri si distincte 2 cate 2). Deci
exista literalii Lv1,1 Lv2,2 ... Lvk,k care sunt adevarati si astfel sunt indeplinite
cele 3 tipuri de clauze:
- Exista k noduri in clica indeplineste clauzele de tipul (1)
- Faptul ca sunt noduri distincte indeplineste (2)
- Adiacente 2 cate 2 indeplineste (3)
De unde rezulta ca SAT(phi) = 1

2) SAT(phi) = 1 => k-Clique(k, G) = 1
SAT(phi) = 1 <=> oricare clauza ci este adevarata => exista literalii Lv1,1 Lv2,2 ... Lvk,k
care sunt adevarati (din clauzele care impun cele 3 conditii: exista k astfel de literali,
vizeaza noduri distincte, nodurile vizate au toate muchii intre ele) => nodurile [v1, v2,..., vk]
(unde vi distincte 2 cate 2, adiacente 2 cate 2) formeaza o k-clica => k-Clique(k, G) = 1


Exemple cu poze in exemple_transformare.pdf
